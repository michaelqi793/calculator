pipeline {
    
    agent any
  /*   triggers {
        pollSCM('* * * * *')
    } */
    stages {
        
          stage("Clean") {
            steps {
               sh "mvn clean"
            }
        }
        
        stage("Unit Test and Package") {
            steps {
               sh "mvn package"
               sh "pwd"
               publishHTML (target: [
                reportDir: 'target/site/jacoco',
                reportFiles:  'index.html,jacoco.csv',
                reportName: 'Jacoco Report'
               ])

                publishHTML (target: [
                               reportDir: 'target/',
                               reportFiles:  'checkstyle-result.xml',
                               reportName: 'checkstyle report'
                              ])
            }
        }

         stage("Docker Imaging") {
            steps {
               // ${BUILD_TIMESTAMP} will be assigned by jenkins' build timestamp plugin
               sh "docker -H 172.17.0.2:2375 build -t archer999/calculator:${BUILD_TIMESTAMP} ."
            }
        }

        stage("Update version") {
            steps {

                sh "sed -i 's/{{VERSION}}/${BUILD_TIMESTAMP}/g' deployment.yaml"
            }

        }

        stage ("Deploy to staging") {
            steps {
               sh "pwd"
               sh "kubectl --kubeconfig=/home/kubernetes/.kube/config apply -f hazelcast.yaml"
               sh "kubectl --kubeconfig=/home/kubernetes/.kube/config apply -f deployment.yaml"
               sh "kubectl --kubeconfig=/home/kubernetes/.kube/config apply -f service.yaml"
               sh "kubectl --kubeconfig=/home/kubernetes/.kube/config cluster-info"
            }

        }


           stage ("Acceptance Test by Behavior") {
                     steps {
                     // There is no good way to check whether the service is already running.  So just sleep and wait here.
                       sleep 50
                       sh "chmod +x acceptance_test_kubernetes.sh && ./acceptance_test_kubernetes.sh"
                     }
                 }

          stage ("Clean staging env") {

            steps {
               sh "kubectl --kubeconfig=/home/kubernetes/.kube/config delete -f service.yaml"
               sh "kubectl --kubeconfig=/home/kubernetes/.kube/config delete -f deployment.yaml"
               sh "kubectl --kubeconfig=/home/kubernetes/.kube/config delete -f hazelcast.yaml"
            }
          }
        
         stage ("Release") {
            steps {
              // currently i have no production cluster, so let it go.
              echo 'Production Released.'
            }

         }

         stage ("Smoke Test") {
           steps {
              // currently i have no production cluster, so let it go.
              echo "Smoke succeeds."
           }
         }
        
    }

    post {
       always {
               echo "Email sent."
               /*  mail to: 'mapleupright@163.com',
                 subject: "Hello Completed Pipeline: ${currentBuild.fullDisplayName}",
               body: "you build completed please check: ${env.BUILD_URL}" */

        }

    }
}
